name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Extract model from comment
      id: extract_model
      run: |
        # コメント内容を取得
        if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
          COMMENT="${{ github.event.comment.body }}"
        elif [[ "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
          COMMENT="${{ github.event.comment.body }}"
        elif [[ "${{ github.event_name }}" == "pull_request_review" ]]; then
          COMMENT="${{ github.event.review.body }}"
        elif [[ "${{ github.event_name }}" == "issues" ]]; then
          COMMENT="${{ github.event.issue.body }}"
        fi
        
        # --model オプションを抽出
        if echo "$COMMENT" | grep -q "@claude --model"; then
          MODEL=$(echo "$COMMENT" | sed -n 's/.*@claude --model \([^ ]*\).*/\1/p' | head -1)
          
          # モデルエイリアスの解決
          case "$MODEL" in
            sonnet)
              RESOLVED_MODEL="claude-sonnet-4-20250514"
              ;;
            gpt-oss)
              RESOLVED_MODEL="gpt-oss-120b"
              ;;
            *)
              # エイリアスでない場合はそのまま使用
              RESOLVED_MODEL="$MODEL"
              ;;
          esac
          
          echo "User specified model: $MODEL"
          echo "Resolved model: $RESOLVED_MODEL"
          echo "model=$RESOLVED_MODEL" >> $GITHUB_OUTPUT
        else
          # デフォルトモデルを使用
          echo "Using default model from repository variables"
          echo "model=${{ vars.MODEL }}" >> $GITHUB_OUTPUT
        fi

    - name: Run Claude Code
      id: claude
      uses: anthropics/claude-code-action@beta
      continue-on-error: true
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        model: ${{ steps.extract_model.outputs.model }}
        allowed_tools: |
          mcp__*,
          Edit,
          MultiEdit,
          Write,
          Read,
          View,
          Replace,
          Bash,
          TodoWrite,
          WebFetch,
          WebSearch,
          Grep,
          Glob,
          LS,
          NotebookEdit
      env:
        ANTHROPIC_BASE_URL: ${{vars.ANTHROPIC_BASE_URL}}
        ANTHROPIC_SMALL_FAST_MODEL: ${{vars.ANTHROPIC_SMALL_FAST_MODEL}}
        
    - name: Debug - Check Claude Response
      if: always()
      run: |
        echo "=== Claude Execution Output ==="
        if [ -f /home/runner/work/_temp/claude-execution-output.json ]; then
          echo "Raw output:"
          cat /home/runner/work/_temp/claude-execution-output.json
          echo ""
          echo "Formatted output:"
          cat /home/runner/work/_temp/claude-execution-output.json | jq '.' || true
          echo ""
          echo "Response content:"
          cat /home/runner/work/_temp/claude-execution-output.json | jq '.turns[-1].assistant' || true
        else
          echo "Output file not found"
        fi
        echo ""
        echo "=== Step Outputs ==="
        echo "Claude step output: ${{ steps.claude.outputs.response }}"
        echo ""
        echo "=== Environment Variables ==="
        echo "Model: ${{ steps.extract_model.outputs.model }}"
        echo "Base URL: ${{vars.ANTHROPIC_BASE_URL}}"
        echo "Small Fast Model: ${{vars.ANTHROPIC_SMALL_FAST_MODEL}}"
        
    - name: Fallback Comment on Empty Response
      if: ${{ failure() || steps.claude.outcome == 'failure' }}
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: ${{ github.event.issue.number || github.event.pull_request.number }}
        body: |
          ⚠️ **Claude Code Action の実行に問題が発生しました**
          
          モデル: `${{ steps.extract_model.outputs.model }}`
          
          **考えられる原因:**
          - LiteLLM プロキシとの互換性問題
          - モデルのレスポンス形式が期待と異なる
          - API の一時的な問題
          
          **推奨事項:**
          - Claude 互換モデル（例: `claude-sonnet-4-20250514`）を使用してください
          - 詳細はワークフローログを確認してください